{
	"info": {
		"_postman_id": "c8a96b08-2a3d-440d-b687-d952d7c49251",
		"name": "Trello API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30506294",
		"_collection_link": "https://gold-trinity-426358.postman.co/workspace/Wiz~5287e21e-6075-448b-8815-6301e3f6791b/collection/30506294-c8a96b08-2a3d-440d-b687-d952d7c49251?action=share&source=collection_link&creator=30506294"
	},
	"item": [
		{
			"name": "Get all boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// const response = pm.response.json();\r",
							"// pm.collectionVariables.set(\"boardId\",response[0].id);\r",
							"\r",
							"// const existingBoardsIds = response.map(board => board.id);\r",
							"// pm.collectionVariables.set(\"existingBoardsIds\", existingBoardsIds);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/members/me/boards?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.collectionVariables.set(\"boardId\",response.id);\r",
							"\r",
							"let boardNumber = pm.collectionVariables.get(\"boardNumber\");\r",
							"pm.test(\"Board is created\", function() {\r",
							"    pm.expect(response.name).to.eql(\"Learning Postman \"+boardNumber);\r",
							"   \r",
							"});\r",
							"\r",
							"pm.test(\"Board is open\", function() {\r",
							"    pm.expect(response.closed).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test(\"Board is private\", function() {\r",
							"    pm.expect(response.prefs.permissionLevel).to.eql(\"private\");\r",
							"});\r",
							"\r",
							"pm.test(\"Calendar is disabled\", function() {\r",
							"    const calendarView = response.prefs.switcherViews.find(view => view.viewType === \"Calendar\");\r",
							"    pm.expect(calendarView).to.be.an(\"object\");\r",
							"    pm.expect(calendarView.enabled).to.be.false;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let boardNumber = pm.collectionVariables.get(\"boardNumber\");\r",
							"\r",
							"if(isNaN(boardNumber)) {\r",
							"    boardNumber = 1;\r",
							"    console.log(boardNumber);\r",
							"    pm.collectionVariables.set(\"boardNumber\", boardNumber);\r",
							"} else {\r",
							"    boardNumber++;\r",
							"    pm.collectionVariables.set(\"boardNumber\", boardNumber);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/?name=Learning Postman+{{boardNumber}}&key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Learning Postman+{{boardNumber}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "name",
							"value": "",
							"disabled": true
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.collectionVariables.set(\"todoListId\",response.id);\r",
							"\r",
							"pm.test(\"TODO list is created\", function() {\r",
							"    pm.expect(response.name).to.eql(\"TODO\");\r",
							"    pm.expect(response.closed).to.be.false;\r",
							"    pm.expect(response.idBoard).to.eql(pm.collectionVariables.get(\"boardId\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/lists?name=TODO&idBoard={{boardId}}&key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.collectionVariables.set(\"doneListId\",response.id);\r",
							"\r",
							"pm.test(\"DONE list is created\", function() {\r",
							"    pm.expect(response.name).to.eql(\"DONE\");\r",
							"    pm.expect(response.closed).to.be.false;\r",
							"    pm.expect(response.idBoard).to.eql(pm.collectionVariables.get(\"boardId\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/lists?name=DONE&idBoard={{boardId}}&key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.collectionVariables.set(\"cardId\",response.id);\r",
							"\r",
							"pm.test(\"Card is created\", () => {\r",
							"    pm.expect(response.name).to.eql(\"Sign-up for Trello\");\r",
							"    pm.expect(response.idList).to.eql(pm.collectionVariables.get(\"todoListId\"));\r",
							"    pm.expect(response.idBoard).to.eql(pm.collectionVariables.get(\"boardId\"));\r",
							"    pm.expect(response.badges.attachmentsByType.trello.card).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/cards?idList={{todoListId}}&key={{apiKey}}&token={{token}}&name=Sign-up for Trello",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{todoListId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Sign-up for Trello"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Card is moved\", () => {\r",
							"    pm.expect(response.name).to.eql(\"Sign-up for Trello\");\r",
							"    pm.expect(response.idList).to.eql(pm.collectionVariables.get(\"doneListId\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/cards/:id?idList={{doneListId}}&key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{doneListId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Sing-up for Trello",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const existingBoardsIds = pm.collectionVariables.get(\"existingBoardsIds\");\r",
							"// console.log(existingBoardsIds);\r",
							"// const boardId = existingBoardsIds.pop();\r",
							"// pm.collectionVariables.set(\"boardId\",boardId);\r",
							"// pm.collectionVariables.set(\"existingBoardsIds\",existingBoardsIds);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "name",
							"value": "",
							"disabled": true
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deleted board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "name",
							"value": "",
							"disabled": true
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiKey",
			"value": "bad86cbc5f892424b9c8457dac5fa3f8",
			"type": "string"
		},
		{
			"key": "token",
			"value": "ATTAccaa0f3c607f7229d42553af87c4a6e6ec55faef5f3d4e8314b142d8ddca67d36A9916BD",
			"type": "string"
		},
		{
			"key": "baseURL",
			"value": "https://api.trello.com",
			"type": "string"
		},
		{
			"key": "boardId",
			"value": "655294fc42f07ab0ccb3bc57"
		},
		{
			"key": "todoListId",
			"value": "655294fded3e49515d92e42b"
		},
		{
			"key": "doneListId",
			"value": "655294fdc3d18cf94c083cd2"
		},
		{
			"key": "cardId",
			"value": "655294fd2234bcc74790c7fa"
		},
		{
			"key": "existingBoardsIds",
			"value": [
				"65514d3f3d44881ce0a14523"
			]
		},
		{
			"key": "boardNumber",
			"value": 13
		}
	]
}